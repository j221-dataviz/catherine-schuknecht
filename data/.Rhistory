layer_id = NULL, z_index = NULL, digits = 4)
)
dma_map %>%
setView(lng = -98.5795, lat = 39.828175, zoom = 4) %>%
addProviderTiles("CartoDB.Positron")
addPolygons(
data = get_map_data(dma),
stroke = FALSE,
smoothFactor = 0.1,
weight = 0.5,
color ="#F1AA70",
fillOpacity = 0.75
) %>%
addMarkers(
data = get_map_data(billboards)
lng = "longitude", lat = "latitude",
label = "messages",
labelOptions = labelOptions(noHide = T, direction = "bottom",
style = list(
"color" = "red",
"font-family" = "serif",
"font-style" = "italic",
"box-shadow" = "3px 3px rgba(0,0,0,0.25)",
"font-size" = "12px",
"border-color" = "rgba(0,0,0,0.5)"
)) %>%
addPolylines(
map, data = get_map_data(roads), polyline = NULL, lat = NULL,
lon = NULL, id = NULL, geodesic = NULL, stroke_colour = NULL,
stroke_weight = NULL, stroke_opacity = NULL, info_window = NULL,
mouse_over = NULL, mouse_over_group = NULL, update_map_view = TRUE,
layer_id = NULL, z_index = NULL, digits = 4)
)
# load the dma data into a leaflet map
dma_map <- leaflet(data=dma)
# set color palette (TK)
# make leaflet map centered on Berkeley with Carto tiles
dma_map %>%
setView(lng = -98.5795, lat = 39.828175, zoom = 4) %>%
addProviderTiles("CartoDB.Positron")
addPolygons(
data = get_map_data(dma),
stroke = FALSE,
smoothFactor = 0.1,
weight = 0.5,
color ="#F1AA70",
fillOpacity = 0.75
) %>%
addMarkers(
data = get_map_data(billboards)
lng = "longitude", lat = "latitude",
label = "messages",
labelOptions = labelOptions(noHide = T, direction = "bottom",
style = list(
"color" = "red",
"font-family" = "serif",
"font-style" = "italic",
"box-shadow" = "3px 3px rgba(0,0,0,0.25)",
"font-size" = "12px",
"border-color" = "rgba(0,0,0,0.5)"
)) %>%
addPolylines(
map, data = get_map_data(roads), polyline = NULL, lat = NULL,
lon = NULL, id = NULL, geodesic = NULL, stroke_colour = NULL,
stroke_weight = NULL, stroke_opacity = NULL, info_window = NULL,
mouse_over = NULL, mouse_over_group = NULL, update_map_view = TRUE,
layer_id = NULL, z_index = NULL, digits = 4)
)
# create a plot of the shapefile
map <- plot(dma, col="#D3D3D3", border="#000000"
, lwd=0.5,
main="DMA plot") %>%
plot(roads,col="#E10000",lwd=0.5) %>%
plot(billboards,col="#3B26C1")
plot(roads,col="#E10000",lwd=0.5) %>%
roads <- plot(roads,col="#E10000",lwd=0.5)
billboards_map <- plot(billboards,col="#3B26C1")
# create a plot of the shapefile
dma_map <- plot(dma, col="#D3D3D3", border="#000000"
, lwd=0.5,
main="DMA plot") %>%
roads_map <- plot(roads,col="#E10000",lwd=0.5)
# load packages to read, write and manipulate data
library(rgeos)
library(sp)
library(rgdal)
library(raster)
library(ggplot2)
library(ggiraph)
library(sp)
library(leaflet)
# read data
billboards <- read.csv("billboards_all.csv")
dma <- readOGR("dma_2008","DMAs")
roads <- readOGR("2017_us_primaryroads","tl_2017_us_primaryroads")
# load the dma data into a leaflet map
dma_map <- leaflet(data=dma)
# set color palette (TK)
# make leaflet map centered on Berkeley with Carto tiles
dma_map %>%
setView(lng = -98.5795, lat = 39.828175, zoom = 4) %>%
addProviderTiles("CartoDB.Positron")
addPolygons(
data = dma,
stroke = FALSE,
smoothFactor = 0.1,
weight = 0.5,
color ="#F1AA70",
fillOpacity = 0.75
) %>%
addMarkers(
data = billboards
lng = "longitude", lat = "latitude",
label = "messages",
labelOptions = labelOptions(noHide = T, direction = "bottom",
style = list(
"color" = "red",
"font-family" = "serif",
"font-style" = "italic",
"box-shadow" = "3px 3px rgba(0,0,0,0.25)",
"font-size" = "12px",
"border-color" = "rgba(0,0,0,0.5)"
)) %>%
addPolylines(
map, data = roads, polyline = NULL, lat = NULL,
lon = NULL, id = NULL, geodesic = NULL, stroke_colour = NULL,
stroke_weight = NULL, stroke_opacity = NULL, info_window = NULL,
mouse_over = NULL, mouse_over_group = NULL, update_map_view = TRUE,
layer_id = NULL, z_index = NULL, digits = 4)
)
# print
print(dma_map)
dma_map %>%
setView(lng = -98.5795, lat = 39.828175, zoom = 4) %>%
addProviderTiles("CartoDB.Positron")
addPolygons(
data = dma,
stroke = FALSE,
smoothFactor = 0.1,
weight = 0.5,
color ="#F1AA70",
fillOpacity = 0.75
) %>%
addMarkers(
data = billboards,
lng = "longitude", lat = "latitude",
label = "messages",
labelOptions = labelOptions(noHide = T, direction = "bottom",
style = list(
"color" = "red",
"font-family" = "serif",
"font-style" = "italic",
"box-shadow" = "3px 3px rgba(0,0,0,0.25)",
"font-size" = "12px",
"border-color" = "rgba(0,0,0,0.5)"
))
# load packages to read, write and manipulate data
library(rgeos)
library(sp)
library(rgdal)
library(raster)
library(ggplot2)
library(ggiraph)
library(sp)
library(leaflet)
# read data
billboards <- read.csv("billboards_all.csv")
dma <- readOGR("dma_2008","DMAs")
roads <- readOGR("2017_us_primaryroads","tl_2017_us_primaryroads")
# load the dma data into a leaflet map
dma_map <- leaflet(data=dma)
# set color palette (TK)
# make leaflet map centered on Berkeley with Carto tiles
dma_map %>%
setView(lng = -98.5795, lat = 39.828175, zoom = 4) %>%
addProviderTiles("CartoDB.Positron")
addPolygons(
data = dma,
stroke = FALSE,
smoothFactor = 0.1,
weight = 0.5,
color ="#F1AA70",
fillOpacity = 0.75
) %>%
addMarkers(
data = billboards,
lng = "longitude", lat = "latitude",
label = "messages",
labelOptions = labelOptions(noHide = T, direction = "bottom",
style = list(
"color" = "red",
"font-family" = "serif",
"font-style" = "italic",
"box-shadow" = "3px 3px rgba(0,0,0,0.25)",
"font-size" = "12px",
"border-color" = "rgba(0,0,0,0.5)"
)) %>%
addPolylines(
map, data = roads, polyline = "LINEARID"
)
# print
print(dma_map)
print(dma_map)
print(dma_map)
# load packages to read, write and manipulate data
library(rgeos)
library(sp)
library(rgdal)
library(raster)
library(ggplot2)
library(ggiraph)
library(sp)
library(leaflet)
# read data
billboards <- read.csv("billboards_all.csv")
dma <- readOGR("dma_2008","DMAs")
roads <- readOGR("2017_us_primaryroads","tl_2017_us_primaryroads")
# load the dma data into a leaflet map
dma_map <- leaflet(data=dma)
dma_map %>%
setView(lng = -98.5795, lat = 39.828175, zoom = 4) %>%
addProviderTiles("CartoDB.Positron")
addPolygons(
data = dma,
stroke = FALSE,
smoothFactor = 0.1,
weight = 0.5,
color ="#F1AA70",
fillOpacity = 0.75
) %>%
addMarkers(
data = billboards,
lng = "longitude", lat = "latitude",
label = "messages",
labelOptions = labelOptions(noHide = T, direction = "bottom",
style = list(
"color" = "red",
"font-family" = "serif",
"font-style" = "italic",
"box-shadow" = "3px 3px rgba(0,0,0,0.25)",
"font-size" = "12px",
"border-color" = "rgba(0,0,0,0.5)"
)) %>%
addPolylines(
map, data = roads, polyline = "LINEARID"
)
# print
print(dma_map)
print(dma_map)
# load packages to read, write and manipulate data
library(rgeos)
library(sp)
library(rgdal)
library(raster)
library(ggplot2)
library(ggiraph)
library(sp)
library(leaflet)
# read data
billboards <- read.csv("billboards_all.csv")
dma <- readOGR("dma_2008","DMAs")
roads <- readOGR("2017_us_primaryroads","tl_2017_us_primaryroads")
# load the dma data into a leaflet map
dma_map <- leaflet(data=dma)
# set color palette (TK)
# make leaflet map centered on Berkeley with Carto tiles
dma_map %>%
setView(lng = -98.5795, lat = 39.828175, zoom = 4) %>%
addProviderTiles("CartoDB.Positron")
#add dma polygons
addPolygons(
data = dma,
stroke = FALSE,
smoothFactor = 0.1,
weight = 0.5,
color ="#F1AA70",
fillOpacity = 0.75
) %>%
#add billboard markers (interactivity w/ images TK)
addMarkers(
data = billboards,
lng = "longitude", lat = "latitude",
label = "messages",
labelOptions = labelOptions(noHide = T, direction = "bottom",
style = list(
"color" = "red",
"font-family" = "serif",
"font-style" = "italic",
"box-shadow" = "3px 3px rgba(0,0,0,0.25)",
"font-size" = "12px",
"border-color" = "rgba(0,0,0,0.5)"
)) %>%
#add primary roads
addPolylines(
map, data = roads, polyline = "LINEARID")
# print
print(dma_map)
> setwd("~/Documents/UCBSOJ/Fall classes/cat-schuknecht/data")
# load packages to read, write and manipulate data
library(readr)
library(dplyr)
library(raster)
library(rgdal)
# read data
bible_minded_cities <- read.csv("us_bible_minded_cities.csv")
dma <- shapefile("2008_nielsen_dmas/DMAs.shp")
# merge on common variable, here called 'key'
dma_join <- merge(x=bible_minded_cities, y=dma, by.x = 'market', by.y = 'NAME,C,30')
> setwd("~/Documents/UCBSOJ/Fall classes/cat-schuknecht/data")
# load packages to read, write and manipulate data
library(readr)
library(dplyr)
library(raster)
library(rgdal)
# read data
bible_minded_cities <- read.csv("us_bible_minded_cities.csv")
dma <- shapefile("2008_nielsen_dmas/DMAs.shp")
# merge on common variable, here called 'key'
dma_join <- merge(bible_minded_cities, dma, by.x = 'market', by.y = 'NAME,C,30')
> setwd("~/Documents/UCBSOJ/Fall classes/cat-schuknecht/data")
# load packages to read, write and manipulate data
library(readr)
library(dplyr)
library(raster)
library(rgdal)
# read data
bible_minded_cities <- read.csv("us_bible_minded_cities.csv")
dma <- shapefile("2008_nielsen_dmas/DMAs.shp")
# merge on common variable, here called 'key'
dma_join <- merge(bible_minded_cities, dma, by.x = 'market', by.y = 'NAME')
View(dma_join)
#convert merged data frame to shapefile
dma_join_shp <-  dma_join %>%
coordinates(dma_join_shp)=~long+lat
> proj4string(dma_join_shp)<- CRS("+proj=longlat +datum=WGS84")
View(bible_minded_cities)
View(dma_join)
plot(dma_join)
View(dma_join)
dma_join
#convert merged data frame to shapefile
dma_join_shp <-  dma_join %>%
coordinates(dma_join_shp)=~"Dcp"+"Rcp"
View(dma_join)
View(dma_join)
write.table(dma_join)
write.csv(dma_join)
write.csv(dma_join)
#convert merged data frame to shapefile
dma_join_shp <-  dma_join %>%
coordinates(dma_join_shp)=~"Dcp"+"Rcp"
proj4string(dma_join_shp)<- CRS("+proj=longlat +datum=WGS84 +no_defs")
#convert merged data frame to shapefile
dma_join_shp <-  dma_join %>%
coordinates(dma_join_shp)=~"Dcp"+"Rcp"
proj4string(dma_join_shp)<- CRS("+proj=longlat +datum=WGS84 +no_defs")
#convert merged data frame to shapefile
dma_join_shp <-  dma_join %>%
coordinates(dma_join_shp)=~"Dcp"+"Rcp"
proj4string(dma_join_shp)<- CRS("+proj=longlat +datum=WGS84")
#convert merged data frame to shapefile
dma_join_shp <-  dma_join %>%
coordinates(dma_join_shp)="Dcp"+"Rcp"
View(dma_join)
#convert merged data frame to shapefile
dma_join_shp <-  dma_join %>%
coordinates(dma_join_shp)=~"Rcp"+"Dcp"
proj4string(dma_join_shp)<- CRS("+proj=longlat +datum=WGS84")
#convert merged data frame to shapefile
dma_join_shp <-  dma_join %>%
coordinates(dma_join)=~"Dcp"+"Rcp"
proj4string(dma_join)<- CRS("+proj=longlat +datum=WGS84")
dma_join_shp <-  dma_join %>%
coordinates(dma_join_shp)=~"Dcp"+"Rcp" %>%
proj4string(dma_join_shp)<- CRS("+proj=longlat +datum=WGS84")
dma_join_shp <-  dma_join
coordinates(dma_join_shp)=~"Dcp"+"Rcp"
proj4string(dma_join_shp)<- CRS("+proj=longlat +datum=WGS84")
dma_join_lng_lat<-spTransform(WGScoor,CRS("+proj=longlat"))
dma_join_lng_lat<-spTransform(dma_join_shp,CRS("+proj=longlat"))
library(readr)
library(dplyr)
library(raster)
library(rgdal)
library(maptools)
library(sp)
library(readr)
library(dplyr)
library(raster)
library(rgdal)
library(maptools)
library(sp)
library(readr)
library(dplyr)
library(raster)
library(rgdal)
library(maptools)
library(sp)
library(readr)
library(dplyr)
library(raster)
library(rgdal)
library(maptools)
library(sp)
library(dplyr)
library(raster)
library(rgdal)
library(maptools)
library(sp)
bible_minded_cities <- read.csv("us_bible_minded_cities.csv")
dma <- shapefile("2008_nielsen_dmas/DMAs.shp")
install.packages("maptools", lib="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library(readr)
library(dplyr)
library(raster)
library(rgdal)
library(maptools)
library(sp)
# read data
bible_minded_cities <- read.csv("us_bible_minded_cities.csv")
dma <- shapefile("2008_nielsen_dmas/DMAs.shp")
# merge on common variable, here called 'key'
dma_join <- merge(bible_minded_cities, dma, by.x = 'market', by.y = 'NAME')
dma_join_shp <-  dma_join
coordinates(dma_join_shp)=~"Dcp"+"Rcp"
proj4string(dma_join_shp)<- CRS("+proj=longlat +datum=WGS84")
dma_join_shp <-  dma_join
coordinates(dma_join_shp)=~"Dcp"+"Rcp"
proj4string(dma_join_shp)<- CRS("+proj=longlat +datum=WGS84")
dma_join_lng_lat<-spTransform(dma_join_shp,CRS("+proj=longlat"))
library(sp)
proj4string(dma_join_shp)<- CRS("+proj=longlat +datum=WGS84")
dma_join_lng_lat<-spTransform(dma_join_shp,CRS("+proj=longlat"))
library(proj4)
install.packages("proj4", lib="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library(proj4)
#convert merged data frame to shapefile
dma_join_shp <-  dma_join
coordinates(dma_join_shp)=~"Dcp"+"Rcp"
proj4string(dma_join_shp)<- CRS("+proj=longlat +datum=WGS84")
#convert merged data frame to shapefile
dma_join_shp <-  dma_join
coordinates(dma_join_shp)=~"Dcp"+"Rcp"
proj4string(dma_join_shp)<- CRS("+proj=longlat +datum=WGS84")
dma_join <- left_join(bible_minded_cities, dma, by.x = 'market', by.y = 'NAME')
dma_join <- join(bible_minded_cities, dma, by.x = 'market', by.y = 'NAME')
dma_join <- join(bible_minded_cities, dma, by.x = 'market', by.y = 'NAME')
View(dma_join)
dma_join <- inner_join(bible_minded_cities, dma, by.x = 'market', by.y = 'NAME')
# load packages to read, write and manipulate data
library(rgeos)
library(sp)
library(rgdal)
library(raster)
library(ggplot2)
library(ggiraph)
library(sp)
library(leaflet)
# read data
billboards <- read.csv("billboards_all.csv")
dma <- readOGR("dma_join","dma_join")
roads <- readOGR("2017_us_primaryroads","tl_2017_us_primaryroads")
dma_map <- leaflet(data=dma)
dma_map %>%
setView(lng = -98.5795, lat = 39.828175, zoom = 4) %>%
addProviderTiles("CartoDB.Positron")
#add dma polygons
addPolygons(
data = dma,
stroke = FALSE,
smoothFactor = 0.1,
weight = 0.5,
color ="#F1AA70",
fillOpacity = 0.75
)
dma_map <- dma %>%
setView(lng = -98.5795, lat = 39.828175, zoom = 4) %>%
addProviderTiles("CartoDB.Positron")
#add dma polygons
addPolygons(
data = dma_join,
stroke = FALSE,
smoothFactor = 0.1,
weight = 0.5,
color ="#F1AA70",
fillOpacity = 0.75
)
dma_map <- dma %>%
setView(lng = -98.5795, lat = 39.828175, zoom = 4) %>%
addProviderTiles("CartoDB.Positron")
#add dma polygons
addPolygons(
data = dma,
stroke = FALSE,
smoothFactor = 0.1,
weight = 0.5,
color ="#F1AA70",
fillOpacity = 0.75
)
dma_map <- leaflet(data=dma)
dma_map %>%
setView(lng = -98.5795, lat = 39.828175, zoom = 4) %>%
addProviderTiles("CartoDB.Positron")
#add dma polygons
addPolygons(
data = dma,
stroke = FALSE,
smoothFactor = 0.1,
weight = 0.5,
color ="#F1AA70",
fillOpacity = 0.75
)
